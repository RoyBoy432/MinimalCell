reprod2way<-aov(myydf$off.per.hr_46.50 ~ myydf$Selection + myydf$Genotype + myydf$Selection*myydf$Genotype)
summary(reprod2way)
TukeyHSD(reprod2way)
test<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Monosaccharide")))
library(ggplot2);library(tidyverse)
#######################################################
#2020/11/04
#B. animalis subsp. lactis
#OD
#Grown in anaerobic tubes, Jake's method
library(ggplot2);library(tidyverse)
mycols=c('black','black','black')
mycols_breakout=c('black','black','black','black','black','black','black','black')
mydf0<-read_csv("~\\..\\OneDrive - Indiana University\\Lab.Notebook\\20190820_Bifidobacterium\\data\\20201104_OD.final_xevo_T0\\20201104_B.animalis.McK.mthd.csv")
mydf0$carbon2<-factor(mydf0$carbon2, levels=c("F","G-F5","G-F24"))
mydf0$carbon<-factor(mydf0$carbon, levels=c("Monomer","Low-DP","High-DP"))
#mydf56<-read_csv("C:\\Users\\rmoge\\OneDrive - Indiana University\\Lab.Notebook\\20190820_Bifidobacterium\\data\\20201229_OD.final_xevo_T56\\20201229_B.animalis.McK.mthd.csv")
mydf151<-read_csv("~\\..\\OneDrive - Indiana University\\Lab.Notebook\\20190820_Bifidobacterium\\data\\20210509_OD.final_xevo_T151_FINAL\\20210509_B.animalis.McK.mthd.csv")
mydf151$carbon2<-factor(mydf151$carbon2, levels=c("F","G-F5","G-F24"))
mydf151$carbon<-factor(mydf151$carbon, levels=c("Monomer","Low-DP","High-DP"))
#######WAIT. STOP.
###YOU have to change the name of the column from "carbon2". I think the number causes a bug where it now fails to appropriately order the factors.
mybreakout<-read_csv("~\\..\\OneDrive - Indiana University\\Lab.Notebook\\20190820_Bifidobacterium\\data\\20210512_OD.final_nutrient.breakout.ancor\\20210512_B.animalis.McK.mthd.csv")
mybreakout$carbon.tech<-factor(mybreakout$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
#mydf151$carbon<-factor(mydf151$carbon, levels=c("Monomer","Low-DP","High-DP"))
mybreakout_2way<-read_csv("~\\..\\OneDrive - Indiana University\\Lab.Notebook\\20190820_Bifidobacterium\\data\\20210512_OD.final_nutrient.breakout.ancor\\20210512_B.animalis.McK.mthd_2way.enabled.csv")
mybreakout_2way$GF.ratio<-factor(mybreakout_2way$GF.ratio, levels=c("1:1","1:5","1:24"))
mybreakout_2way$Saccharide.size<-factor(mybreakout_2way$Saccharide.size, levels=c("Monosaccharide","Oligosaccharide"))
tubeaov0<-aov(mydf0$OD.600 ~ mydf0$carbon)
summary(tubeaov0)
TukeyHSD(tubeaov0)
#All treatments are significantly different.
#Tukey letters: A, B, C
#Not sure I want or need this next paragraph. I believe it came from Jay's analysis? Its purpose was to leave out the fructose control treatment for presentation in abbreviated format for our proposal, generating a P value therefor. Regardless, the ANOVA suffices.
#my.proposal.subset.low<-filter(mydf, carbon=="CLR")
#my.proposal.subset.high<-filter(mydf, carbon=="Sensus")
#var.test(x=my.proposal.subset.low$OD.600, y=my.proposal.subset.high$OD.600)
#t.test(x=my.proposal.subset.low$OD.600, y=my.proposal.subset.high$OD.600, alternative="two.sided", var.equal = TRUE)
#odtube0 <- mydf0 %>% arrange(OD.600) %>% mutate(name=factor(carbon2, levels=c("F","G-F5","G-F24"))) %>% ggplot(mydf0, aes(x=carbon2, y=OD.600))
odtube0 <- ggplot(mydf0, aes(x=carbon, y=OD.600))
odtube0 +
geom_jitter(
aes(shape = carbon, color = carbon), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = 1, dodge.width = 0.7),
size = 5.5, stroke = 2) +
scale_shape_manual(values = c(0,0,0)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = carbon),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, stroke=1.5, shape=95,
position = position_dodge(1),
) +
scale_color_manual(values = mycols) +
scale_y_continuous(limits = c(-0.04,.9),breaks=c(0,.4,.8), expand = c(0,0)) +
labs(x="\nCarbon source",y="OD 600\n") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.ticks.y = element_line(color = "black", size = 2), axis.ticks.x = element_blank(), legend.position = "none", panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black"))
odtube0_sameaxis <- ggplot(mydf0, aes(x=carbon, y=OD.600))
odtube0_sameaxis + geom_jitter(
aes(shape = carbon, color = carbon), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = 1.5, dodge.width = 0.7),
size = 5.5, stroke = 2) +
scale_shape_manual(values = c(0,0,0)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = carbon),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, stroke=1.5, shape=95,
position = position_dodge(1),
) +
scale_color_manual(values = mycols) +
scale_y_continuous(limits = c(-0.04,1.6),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
labs(x="\nCarbon source",y="OD 600\n") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.ticks.y = element_line(color = "black", size = 2), axis.ticks.x = element_blank(), legend.position = "none", panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black"))
mydf151$carbon2<-factor(mydf151$carbon2, levels=c("F","G-F5","G-F24"))
tubeaov151<-aov(mydf151$OD.600 ~ mydf151$carbon)
summary(tubeaov151)
TukeyHSD(tubeaov151)
#F and GF7 are significantly higher than GF23. F and GF7 not significantly different from each other.
#Tukey letters: A, A, B
#Not sure I want or need this next paragraph. I believe it came from Jay's analysis? Its purpose was to leave out the fructose control treatment for presentation in abbreviated format for our proposal, generating a P value therefor. Regardless, the ANOVA suffices.
#my.proposal.subset.low<-filter(mydf, carbon=="CLR")
#my.proposal.subset.high<-filter(mydf, carbon=="Sensus")
#var.test(x=my.proposal.subset.low$OD.600, y=my.proposal.subset.high$OD.600)
#t.test(x=my.proposal.subset.low$OD.600, y=my.proposal.subset.high$OD.600, alternative="two.sided", var.equal = TRUE)
FOD<-mean(c(filter(mydf0, carbon=="Monomer")$OD.600))
POD<-mean(c(filter(mydf0, carbon=="Low-DP")$OD.600))
XOD<-mean(c(filter(mydf0, carbon=="High-DP")$OD.600))
anc.OD<-c(FOD,FOD,FOD,FOD,FOD,FOD,FOD,FOD,POD,POD,POD,POD,POD,POD,POD,POD,XOD,XOD,XOD,XOD,XOD,XOD,XOD,XOD)
anc.colors<-c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey")
odtube151 <- ggplot(mydf151, aes(x=carbon, y=OD.600))
odtube151 +geom_errorbar(aes(ymin=anc.OD,ymax=anc.OD),color=anc.colors,lwd = 2.25,linetype=117) +
geom_jitter(
aes(shape = carbon, color = carbon), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = 1.5, dodge.width = 0.7),
size = 5.5, stroke = 2) +
scale_shape_manual(values = c(0,0,0)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = carbon),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, stroke=1.5, shape=95,
position = position_dodge(1),
) +
scale_color_manual(values = mycols) +
scale_y_continuous(limits = c(-0.04,1.6),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
labs(x="\nCarbon source",y="OD 600\n") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.ticks.y = element_line(color = "black", size = 2), axis.ticks.x = element_blank(), legend.position = "none", panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black"))
######################################
#Making the combined figure
##########################t-tests with OD600##################################
#For each carbon source, I could do two-sample t-test to ask whether growth increased after evolution.
#This is misleading, though, because there are two different levels of replication.
#We should really be doing one-sample t-tests and taking the ancestral value as fixed.
#Below, I do the two-sample t-tests
#Did growth on fructose increase during 866 generations of natural selection?
var.test(x=c(filter(mydf0, carbon=="Monomer")$OD.600),y=c(filter(mydf151, carbon == "Monomer")$OD.600),ratio=1,alternative = "t")
#P = .3316. Homoscedastic.
t.test(x=c(filter(mydf0, carbon=="Monomer")$OD.600),y=c(filter(mydf151, carbon == "Monomer")$OD.600),mu=0,alternative = "l",paired=F,var.equal=T)
#p = 4.543EE-16 < 0.0001
#Did growth on P95 inulin (DP = 2-8) increase during 866 generations of natural selection?
var.test(x=c(filter(mydf0, carbon=="Low-DP")$OD.600),y=c(filter(mydf151, carbon == "Low-DP")$OD.600),ratio=1,alternative = "t")
#P = .1358. Homoscedastic.
t.test(x=c(filter(mydf0, carbon=="Low-DP")$OD.600),y=c(filter(mydf151, carbon == "Low-DP")$OD.600),mu=0,alternative = "l",paired=F,var.equal=T)
#p = 5.010EE-10 < 0.0001
#Did growth on TEX inulin (DP > 23) increase during 866 generations of natural selection?
var.test(x=c(filter(mydf0, carbon=="High-DP")$OD.600),y=c(filter(mydf151, carbon == "High-DP")$OD.600),ratio=1,alternative = "t")
#P = .04689. Heteroscedastic.
t.test(x=c(filter(mydf0, carbon=="High-DP")$OD.600),y=c(filter(mydf151, carbon == "High-DP")$OD.600),mu=0,alternative = "l",paired=F,var.equal=F)
#p = 0.0004431 < 0.001
mypvec151<-c(t.test(x=c(filter(mydf0, carbon=="Monomer")$OD.600),y=c(filter(mydf151, carbon == "Monomer")$OD.600),mu=0,alternative = "l",paired=F,var.equal=T)$p.value, t.test(x=c(filter(mydf0, carbon=="Low-DP")$OD.600),y=c(filter(mydf151, carbon == "Low-DP")$OD.600),mu=0,alternative = "l",paired=F,var.equal=T)$p.value, t.test(x=c(filter(mydf0, carbon=="High-DP")$OD.600),y=c(filter(mydf151, carbon == "High-DP")$OD.600),mu=0,alternative = "l",paired=F,var.equal=F)$p.value)
mypvec151.adjust<-p.adjust(p=mypvec151, method = "BH")#cite BH&Y 2009
mypvec151.adjust
#Now, I will do the one-sample t-tests
#Did growth on fructose increase during 866 generations of natural selection?
shapiro.test(c(filter(mydf151, carbon == "Monomer")$OD.600))
#P = .4783. Data are not significantly non-Gaussian.
t.test(x=c(filter(mydf151, carbon == "Monomer")$OD.600),mu=mean(c(filter(mydf0, carbon=="Monomer")$OD.600)),alternative = 'g')
#p = 1.609EE-10 < 0.0001
shapiro.test(c(filter(mydf151, carbon == "Low-DP")$OD.600))
#P = .5522. Data are not significantly non-Gaussian.
t.test(x=c(filter(mydf151, carbon == "Low-DP")$OD.600),mu=mean(c(filter(mydf0, carbon=="Low-DP")$OD.600)),alternative = 'g')
#p = 4.166EE-08 < 0.0001
shapiro.test(c(filter(mydf151, carbon == "High-DP")$OD.600))
#P = .1954. Data are not significantly non-Gaussian.
t.test(x=c(filter(mydf151, carbon == "High-DP")$OD.600),mu=mean(c(filter(mydf0, carbon=="High-DP")$OD.600)),alternative = 'g')
#p = 0.0003669 < 0.001
mypvec151.onesample<-c(t.test(x=c(filter(mydf151, carbon == "Monomer")$OD.600),mu=mean(c(filter(mydf0, carbon=="Monomer")$OD.600)),alternative = 'g')$p.value,t.test(x=c(filter(mydf151, carbon == "Low-DP")$OD.600),mu=mean(c(filter(mydf0, carbon=="Low-DP")$OD.600)),alternative = 'g')$p.value,t.test(x=c(filter(mydf151, carbon == "High-DP")$OD.600),mu=mean(c(filter(mydf0, carbon=="High-DP")$OD.600)),alternative = 'g')$p.value)
mypvec151.onesample
mypvec151.onesample.adjust<-p.adjust(p=mypvec151.onesample, method = "BH")#cite BH&Y 2009
mypvec151.onesample.adjust
########################################################################################
########Nutrient breakout experiment
odbreakout <- ggplot(mybreakout, aes(x=carbon.tech, y=OD.600))
odbreakout + geom_jitter(
aes(shape = carbon.tech, color = carbon.tech), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = 1.5, dodge.width = 0.7),
size = 5.5, stroke = 2) +
scale_shape_manual(values = c(0,0,0,0,0,0,0,0)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = carbon.tech),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, stroke=1.5, shape=95,
position = position_dodge(1),
) +
scale_color_manual(values = mycols_breakout) +
scale_y_continuous(limits = c(-0.04,1.6),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
labs(x="\nCarbon source",y="OD 600\n") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.ticks.y = element_line(color = "black", size = 2), axis.ticks.x = element_blank(), legend.position = "none", panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black"))
breakoutaov<-aov(mybreakout$OD.600 ~ mybreakout$carbon.tech)
summary(breakoutaov)
TukeyHSD(breakoutaov)
breakout2way<-aov(mybreakout_2way$OD.600 ~ mybreakout_2way$Saccharide.size + mybreakout_2way$GF.ratio + mybreakout_2way$Saccharide.size*mybreakout_2way$GF.ratio)
summary(breakout2way)
TukeyHSD(breakout2way)
breakout.2way.colors<-c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey")
test<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Monosaccharide")))
filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Monosaccharide")
test<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Monosaccharide")$OD.600))
test
dummy.1<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Monosaccharide")$OD.600))
dummy.2<-mean(c(filter(mybreakout_2way, GF.ratio=="1:5", Saccharide.size=="Monosaccharide")$OD.600))
dummy.3<-mean(c(filter(mybreakout_2way, GF.ratio=="1:24", Saccharide.size=="Monosaccharide")$OD.600))
dummy.4<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Oligosaccharide")$OD.600))
dummy.5<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Oligosaccharide")$OD.600))
dummy.6<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Oligosaccharide")$OD.600))
anc.means<-c(dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6)
dummy.1<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Monosaccharide")$OD.600))
dummy.2<-mean(c(filter(mybreakout_2way, GF.ratio=="1:5", Saccharide.size=="Monosaccharide")$OD.600))
dummy.3<-mean(c(filter(mybreakout_2way, GF.ratio=="1:24", Saccharide.size=="Monosaccharide")$OD.600))
dummy.4<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Oligosaccharide")$OD.600))
dummy.5<-mean(c(filter(mybreakout_2way, GF.ratio=="1:5", Saccharide.size=="Oligosaccharide")$OD.600))
dummy.6<-mean(c(filter(mybreakout_2way, GF.ratio=="1:24", Saccharide.size=="Oligosaccharide")$OD.600))
anc.means.OD<-c(dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6)
enaught <- ggplot(mybreakout_2way, aes(x=GF.ratio, y=OD.600))
enaught +
geom_errorbar(aes(ymax=anc.means.OD,ymin=anc.means.OD),color=breakout.2way.colors,lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Saccharide.size, color = Saccharide.size),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.35),
size = 4.5, stroke = 1.8
) +
stat_summary(
aes(color = Saccharide.size),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95, stroke=2,
position = position_dodge(0.35),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("Monosaccharide","Oligosaccharide")) +
scale_shape_manual(values = c(15,0), labels = c("Monosaccharide", "Oligosaccharide")) +#12 is a square with a vertical cross inside it
labs(x="\nG:F ratio",y="OD 600") +
scale_y_continuous(limits = c(-0.04,1.5),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
enaught <- ggplot(mybreakout_2way, aes(x=GF.ratio, y=OD.600))
enaught +
geom_errorbar(aes(ymax=anc.means.OD,ymin=anc.means.OD),color=breakout.2way.colors,lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Saccharide.size, color = Saccharide.size),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.35),
size = 4.5, stroke = 1.8
) +
stat_summary(
aes(color = Saccharide.size),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95, stroke=2,
position = position_dodge(0.35),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("Monosaccharide","Oligosaccharide")) +
scale_shape_manual(values = c(15,0), labels = c("Monosaccharide", "Oligosaccharide")) +#12 is a square with a vertical cross inside it
labs(x="\nG:F ratio",y="OD 600") +
scale_y_continuous(limits = c(-0.04,1.54),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
dummy.1
dummy.2
dummy.3
dummy.4
dummy.5
dummy.6
anc.means.OD<-c(dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6)
enaught <- ggplot(mybreakout_2way, aes(x=GF.ratio, y=OD.600))
enaught +
geom_errorbar(aes(ymax=anc.means.OD,ymin=anc.means.OD),color=breakout.2way.colors,lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Saccharide.size, color = Saccharide.size),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.35),
size = 4.5, stroke = 1.8
) +
stat_summary(
aes(color = Saccharide.size),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95, stroke=2,
position = position_dodge(0.35),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("Monosaccharide","Oligosaccharide")) +
scale_shape_manual(values = c(15,0), labels = c("Monosaccharide", "Oligosaccharide")) +#12 is a square with a vertical cross inside it
labs(x="\nG:F ratio",y="OD 600") +
scale_y_continuous(limits = c(-0.04,1.54),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
anc.means.OD<-c(dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6)
enaught <- ggplot(mybreakout_2way, aes(x=GF.ratio, y=OD.600))
enaught +
geom_errorbar(aes(ymax=anc.means.OD,ymin=anc.means.OD),color=breakout.2way.colors,lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Saccharide.size, color = Saccharide.size),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.35),
size = 4.5, stroke = 1.8
) +
stat_summary(
aes(color = Saccharide.size),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95, stroke=2,
position = position_dodge(0.35),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("Monosaccharide","Oligosaccharide")) +
scale_shape_manual(values = c(15,0), labels = c("Monosaccharide", "Oligosaccharide")) +#12 is a square with a vertical cross inside it
labs(x="\nG:F ratio",y="OD 600") +
scale_y_continuous(limits = c(-0.04,1.54),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
dummy.1<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Monosaccharide")$OD.600))
dummy.2<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Oligosaccharide")$OD.600))
dummy.3<-mean(c(filter(mybreakout_2way, GF.ratio=="1:5", Saccharide.size=="Monosaccharide")$OD.600))
dummy.4<-mean(c(filter(mybreakout_2way, GF.ratio=="1:5", Saccharide.size=="Oligosaccharide")$OD.600))
dummy.5<-mean(c(filter(mybreakout_2way, GF.ratio=="1:24", Saccharide.size=="Monosaccharide")$OD.600))
dummy.6<-mean(c(filter(mybreakout_2way, GF.ratio=="1:24", Saccharide.size=="Oligosaccharide")$OD.600))
anc.means.OD<-c(dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6)
enaught <- ggplot(mybreakout_2way, aes(x=GF.ratio, y=OD.600))
enaught +
geom_errorbar(aes(ymax=anc.means.OD,ymin=anc.means.OD),color=breakout.2way.colors,lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Saccharide.size, color = Saccharide.size),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.35),
size = 4.5, stroke = 1.8
) +
stat_summary(
aes(color = Saccharide.size),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95, stroke=2,
position = position_dodge(0.35),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("Monosaccharide","Oligosaccharide")) +
scale_shape_manual(values = c(15,0), labels = c("Monosaccharide", "Oligosaccharide")) +#12 is a square with a vertical cross inside it
labs(x="\nG:F ratio",y="OD 600") +
scale_y_continuous(limits = c(-0.04,1.54),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
dummy.1<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Monosaccharide")$OD.600))
dummy.2<-mean(c(filter(mybreakout_2way, GF.ratio=="1:5", Saccharide.size=="Monosaccharide")$OD.600))
dummy.3<-mean(c(filter(mybreakout_2way, GF.ratio=="1:24", Saccharide.size=="Monosaccharide")$OD.600))
dummy.4<-mean(c(filter(mybreakout_2way, GF.ratio=="1:1", Saccharide.size=="Oligosaccharide")$OD.600))
dummy.5<-mean(c(filter(mybreakout_2way, GF.ratio=="1:5", Saccharide.size=="Oligosaccharide")$OD.600))
dummy.6<-mean(c(filter(mybreakout_2way, GF.ratio=="1:24", Saccharide.size=="Oligosaccharide")$OD.600))
anc.means.OD<-c(dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6)
enaught <- ggplot(mybreakout_2way, aes(x=GF.ratio, y=OD.600))
enaught +
geom_errorbar(aes(ymax=anc.means.OD,ymin=anc.means.OD),color=breakout.2way.colors,lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Saccharide.size, color = Saccharide.size),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.35),
size = 4.5, stroke = 1.8
) +
stat_summary(
aes(color = Saccharide.size),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95, stroke=2,
position = position_dodge(0.35),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("Monosaccharide","Oligosaccharide")) +
scale_shape_manual(values = c(15,0), labels = c("Monosaccharide", "Oligosaccharide")) +#12 is a square with a vertical cross inside it
labs(x="\nG:F ratio",y="OD 600") +
scale_y_continuous(limits = c(-0.04,1.54),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
dummy.5
dummy.1
dummy.2
dummy.3
dummy.4
dummy.5
dummy.6
anc.means.OD<-c(dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.2,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.3,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.1,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.4,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.5,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6,dummy.6)
enaught <- ggplot(mybreakout_2way, aes(x=GF.ratio, y=OD.600))
enaught +
geom_errorbar(aes(ymax=anc.means.OD,ymin=anc.means.OD),color=breakout.2way.colors,lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Saccharide.size, color = Saccharide.size),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.35),
size = 4.5, stroke = 1.8
) +
stat_summary(
aes(color = Saccharide.size),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95, stroke=2,
position = position_dodge(0.35),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("Monosaccharide","Oligosaccharide")) +
scale_shape_manual(values = c(15,0), labels = c("Monosaccharide", "Oligosaccharide")) +#12 is a square with a vertical cross inside it
labs(x="\nG:F ratio",y="OD 600") +
scale_y_continuous(limits = c(-0.04,1.54),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
enaught <- ggplot(mybreakout_2way, aes(x=GF.ratio, y=OD.600))
enaught +
geom_errorbar(aes(ymax=anc.means.OD,ymin=anc.means.OD),color=breakout.2way.colors,lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Saccharide.size, color = Saccharide.size),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.35),
size = 4.5, stroke = 1.8
) +
stat_summary(
aes(color = Saccharide.size),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95, stroke=2,
position = position_dodge(0.35),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("Monosaccharide","Oligosaccharide")) +
scale_shape_manual(values = c(15,0), labels = c("Monosaccharide", "Oligosaccharide")) +#12 is a square with a vertical cross inside it
labs(x="\nG:F ratio",y="OD 600") +
scale_y_continuous(limits = c(-0.04,1.64),breaks=c(0,.5,1,1.5), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
require("png")
require("dplyr")
require("grid")
sem <- function(x) sqrt(var(x)/length(x))
size.raw <-read.csv("~\\..\\GitHub\\MinimalCell\\data2\\cases_microbeJ.csv")
rm(list=ls())
require("knitr")
getwd()
#setwd("~/GitHub/MinimalCell")
#opts_knit$set(root.dir = "~\\..\\GitHub\\MinimalCell")
knitr::opts_chunk$set(root.dir = "~\\..\\GitHub\\MinimalCell")
getwd()
#size.raw <-read.csv("~\\..\\GitHub\\MinimalCell\\data2\\cases_microbeJ.csv")
size.raw <- as_tibble(size.raw)
size.raw <-read.csv("~\\..\\GitHub\\MinimalCell\\data2\\cases_microbeJ.csv")
size.raw <-read.csv("~\\..\\GitHub\\MinimalCell\\data2\\cases_microbeJ.csv")
#size.raw <-read.csv("~\\..\\GitHub\\MinimalCell\\data2\\cases_microbeJ.csv")
size.raw <- as_tibble(size.raw)
colnames(size.raw) <- c("strain", "timepoint", "sub.strain", "diameter", "area",
"volume", "pixels", "mean", "min", "max")
size <- size.raw %>% group_by(strain, timepoint) %>% summarise(mean = mean(diameter), sem = sem(diameter))
require("png")
require("dplyr")
require("grid")
sem <- function(x) sqrt(var(x)/length(x))
size <- size.raw %>% group_by(strain, timepoint) %>% summarise(mean = mean(diameter), sem = sem(diameter))
size$strain <- as.factor(size$strain)
size$timepoint <- as.factor(size$timepoint)
# Add x-values for plotting
time.x <- c(1,3,1,3)
size <- data.frame(size, time.x)
# Subset relative fitness by strain
# Note, this code generates the mean and SEM for evolved lines incorrectly. It pools the mean and SEM across all measured individual cells, rather than taking the SEM of the 4 evolutionary replicates. In the code to generate the figure, I altered the size.wt and size.min dataframes to have the correct SEMs for plotting.
size.wt  <- filter(size, strain == "Wildtype") %>%
dplyr::select(timepoint, mean, sem, time.x)
size.min  <- filter(size, strain== "Minimal") %>%
dplyr::select(timepoint, mean, sem, time.x)
size.min  <- filter(size, strain== "Minimal") %>%
dplyr::select(timepoint, mean, sem, time.x)
## Tests significance
```{r}
# Subset data
size.reps <- size.raw %>%
dplyr::select(strain, timepoint, sub.strain, diameter) %>%
group_by(timepoint, strain, sub.strain) %>%
summarize(mean.diam = mean(diameter))
s1_anc.reps <- filter(size.raw, sub.strain == "s1_anc")
B_anc.reps <- filter(size.raw, sub.strain == "B_anc")
equal.var.anc <- var.test(s1_anc.reps$diameter, B_anc.reps$diameter)
anc.t.test <- t.test(x = s1_anc.reps$diameter, B_anc.reps$diameter, alternative = "two.sided", var.equal = T, mu = 0)
evo.reps <- filter(size.reps, timepoint == "Evolved") %>%
group_by(strain, sub.strain)
equal.var.evo <- var.test(evo.reps$mean.diam[1:4], evo.reps$mean.diam[5:8])
evo.t.test <- t.test(evo.reps$mean.diam ~ evo.reps$strain, var.equal = T)
# Difference in cell size between wildtype ancestor and wildtype evolved lines?
s1_delta.t.test <- t.test(x = evo.reps$mean.diam[5:8], mu = size.reps$mean.diam[2], alternative = 't')
# Difference in cell size between minimal ancestor and minimal evolved lines?
B_delta.t.test <- t.test(x = evo.reps$mean.diam[1:4], mu = size.reps$mean.diam[1], alternative = 't')
evo.reps$mean.diam
rm(list=ls())
require("knitr")
getwd()
setwd("~/GitHub/MinimalCell")
setwd("~\\..\\GitHub\\MinimalCell")
require("png")
require("dplyr")
require("grid")
sem <- function(x) sqrt(var(x)/length(x))
size.raw <-read.csv("~\\..\\GitHub\\MinimalCell\\data2\\cases_microbeJ.csv")
rm(list=ls())
require("knitr")
getwd()
#setwd("~/GitHub/MinimalCell")
#opts_knit$set(root.dir = "~\\..\\GitHub\\MinimalCell")
#setwd("~\\..\\GitHub\\MinimalCell")
knitr::opts_chunk$set(root.dir = "~\\..\\GitHub\\MinimalCell")
getwd()
#size.raw <-read.csv("~\\..\\GitHub\\MinimalCell\\data2\\cases_microbeJ.csv")
size.raw <- as_tibble(size.raw)
size.raw <-read.csv("~\\..\\GitHub\\MinimalCell\\data2\\cases_microbeJ.csv")
#size.raw <-read.csv("~\\..\\GitHub\\MinimalCell\\data2\\cases_microbeJ.csv")
size.raw <- as_tibble(size.raw)
colnames(size.raw) <- c("strain", "timepoint", "sub.strain", "diameter", "area",
"volume", "pixels", "mean", "min", "max")
size <- size.raw %>% group_by(strain, timepoint) %>% summarise(mean = mean(diameter), sem = sem(diameter))
sem <- function(x) sqrt(var(x)/length(x))
require("png")
require("dplyr")
require("grid")
size <- size.raw %>% group_by(strain, timepoint) %>% summarise(mean = mean(diameter), sem = sem(diameter))
size$strain <- as.factor(size$strain)
size$timepoint <- as.factor(size$timepoint)
# Add x-values for plotting
time.x <- c(1,3,1,3)
size <- data.frame(size, time.x)
# Subset relative fitness by strain
# Note, this code generates the mean and SEM for evolved lines incorrectly. It pools the mean and SEM across all measured individual cells, rather than taking the SEM of the 4 evolutionary replicates. In the code to generate the figure, I altered the size.wt and size.min dataframes to have the correct SEMs for plotting.
size.wt  <- filter(size, strain == "Wildtype") %>%
dplyr::select(timepoint, mean, sem, time.x)
size.min  <- filter(size, strain== "Minimal") %>%
dplyr::select(timepoint, mean, sem, time.x)
size.raw
# Subset data
size.reps <- size.raw %>%
dplyr::select(strain, timepoint, sub.strain, diameter) %>%
group_by(timepoint, strain, sub.strain) %>%
summarize(mean.diam = mean(diameter))
size.reps
s1_anc.reps <- filter(size.raw, sub.strain == "s1_anc")
B_anc.reps <- filter(size.raw, sub.strain == "B_anc")
equal.var.anc <- var.test(s1_anc.reps$diameter, B_anc.reps$diameter)
anc.t.test <- t.test(x = s1_anc.reps$diameter, B_anc.reps$diameter, alternative = "two.sided", var.equal = T, mu = 0)
evo.reps <- filter(size.reps, timepoint == "Evolved") %>%
group_by(strain, sub.strain)
equal.var.evo <- var.test(evo.reps$mean.diam[1:4], evo.reps$mean.diam[5:8])
evo.t.test <- t.test(evo.reps$mean.diam ~ evo.reps$strain, var.equal = T)
evo.reps
mean(evo.reps$mean.diam[5:8])
sem(evo.reps$mean.diam[5:8])
anc.t.test <- t.test(x = s1_anc.reps$diameter, B_anc.reps$diameter, alternative = "two.sided", var.equal = T, mu = 0)
evo.reps <- filter(size.reps, timepoint == "Evolved") %>%
group_by(strain, sub.strain)
equal.var.evo <- var.test(evo.reps$mean.diam[1:4], evo.reps$mean.diam[5:8])
evo.t.test <- t.test(evo.reps$mean.diam ~ evo.reps$strain, var.equal = T)
# Difference in cell size between wildtype ancestor and wildtype evolved lines?
s1_delta.t.test <- t.test(x = evo.reps$mean.diam[5:8], mu = size.reps$mean.diam[2], alternative = 't')
s1_delta.t.test
