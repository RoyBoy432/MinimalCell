install.packages("indicspecies")
libary(indicspecies)
library(indicspecies)
require("indicspecies")
rm(list=ls())
getwd()
setwd("~/GitHub/MinimalCell")
require("png")
require("dplyr")
require("grid")
require("vegan")
require("indicspecies")
g.essent.raw <- read.csv("data2/GxP_Mm_essential.csv")
g.essent.raw$sample <- as.factor(g.essent.raw$sample)
g.essent.raw$treatment <- as.factor(g.essent.raw$treatment)
levels(g.essent.raw$treatment)[levels(g.essent.raw$treatment)=="s1"] <- "Wildtype"
levels(g.essent.raw$treatment)[levels(g.essent.raw$treatment)=="s3"] <- "Minimal"
g.essent <- as_tibble(g.essent.raw)
g.essent <- as.matrix(g.essent[,3:ncol(g.essent)])
g.essent.adonis <- adonis(g.essent ~ g.essent.raw$treatment, method = "bray", permutations = 9999)
g.essent.dist <- vegdist(g.essent, method = 'bray', upper = TRUE, diag = TRUE)
g.essent.dist <- as_tibble(data.matrix(g.essent.dist))
# Run PCoA and quantify explained variance
pcoa.eig <- cmdscale(g.essent.dist, eig = TRUE, k = 3)
explainvar1 <- round(pcoa.eig$eig[1] / sum(pcoa.eig$eig), 3) * 100 # 42.1 %
explainvar2 <- round(pcoa.eig$eig[2] / sum(pcoa.eig$eig), 3) * 100 # 16.5 %
explainvar3 <- round(pcoa.eig$eig[3] / sum(pcoa.eig$eig), 3) * 100 # 15.1 %
sum.eig <- sum(explainvar1, explainvar2, explainvar3) # 73 %
# Add sample and treatment IDs
g.essent.pcoa <- as.data.frame(pcoa.eig[1])
g.essent.pcoa$treatment <- g.essent.raw$treatment
row.names(g.essent.pcoa) <- g.essent.raw$sample
g.essent.pcoa$sample <- g.essent.raw$sample
names(g.essent.pcoa)[1:3] <- c('PC1', 'PC2', 'PC3')
g.essent.raw
g.essent.raw$sample
g.essent.raw$treatment
g.essent
ind <- multipatt(g.essent, cluster = g.essent.raw$treatment, func = "r.g",
control = how(nperm = 999))
# Select genes with significant (P < 0.05) correlations greater than 0.7
ind.sig <- ind$sign[ which(ind$sign[5] <= 0.05 & ind$sign[4] >= abs(0.7)), ]
ind.sig
ind.sig <- ind$sign[ which(ind$sign[5] <= 0.05 & ind$sign[4] >= abs(0.2)), ]
ind.sig
ind.sig <- ind$sign[ which(ind$sign[5] <= 0.05, ]
ind.sig <- ind$sign[ which(ind$sign[5] <= 0.05), ]
ind.sig
ind <- multipatt(g.essent, cluster = g.essent.raw$treatment, func = "r.g",
control = how(nperm = 999))
ind.sig <- ind$sign[ which(ind$sign[5] <= 0.05), ]
ind.sig
