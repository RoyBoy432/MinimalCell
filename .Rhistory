twoprop_tstv <- prop.test(x=c(x4s1,x43B),n=c(n4s1,n43B),alternative = 'two.sided');twoprop_tstv
#p-val < 1.0e-12. Conclude that transition bias is significantly stronger in 3B
#PART 4: Do a greater proportion of lines possess a large (> 100 bp) mutation in one strain versus the other?
max(MAs1$SV);max(MA3B$SV)
#since the max is 1, I can just take a sum to get the number of lines with a large mut
x5s1=sum(MAs1$SV);n5s1=90;x53B=sum(MA3B$SV);n53B=67
twoprop_large <- prop.test(x=c(x5s1,x53B),n=c(n5s1,n43B),alternative = 'two.sided');twoprop_large
#prop 1: 0.188888888888; prop 2: 0; p-val < e-09
#PART 5: Compare whether the total mutn rate was different between the strains
#first, per nt (which is the interesting comparison as far as cell biology goes)
#test for normality
shapiro.test(MAs1$per_nt_per_gen);shapiro.test(MA3B$per_nt_per_gen)
ggdensity(MAs1$per_nt_per_gen);ggdensity(MA3B$per_nt_per_gen)
wilcox.test(x=MAs1$per_nt_per_gen,y=MA3B$per_nt_per_gen,mu=0,alternative = 'two.sided',paired=F)
#P > 0.05
shapiro.test(log(MAs1$per_nt_per_gen));shapiro.test(log(MA3B$per_nt_per_gen))
ggdensity(log(MAs1$per_nt_per_gen));ggdensity(log(MA3B$per_nt_per_gen))
wilcox.test(x=log(MAs1$per_nt_per_gen),y=log(MA3B$per_nt_per_gen),mu=0,alternative = 'two.sided',paired=F)
#W=same--- log transform doesnt affect the median
#Can I use t-test anyway, since the sample size is large? n>=90. I want to use a t-test because I want to test a hypothesis about a difference in means, not a difference in medians.
#test for equal variances
var.test(x=MAs1$per_nt_per_gen,y=MA3B$per_nt_per_gen,ratio=1,alternative = 'two.sided')
#p >0.05
pernt_twostrains<-t.test(x=MAs1$per_nt_per_gen,y=MA3B$per_nt_per_gen,mu=0,alternative = 'two.sided',var.equal = T);pernt_twostrains
#p > 0.05, = 0.541
var.test(x=log(MAs1$per_nt_per_gen),y=log(MA3B$per_nt_per_gen),ratio=1,alternative = 'two.sided')
#F=0.717, p-val = 0.144
pernt_twostrains_log<-t.test(x=log(MAs1$per_nt_per_gen),y=log(MA3B$per_nt_per_gen),mu=0,alternative = 'two.sided',var.equal = T);pernt_twostrains_log
#p-val = .65
#Conclude that mutation rate is not significantly higher in the 3B strain. So this suggests there was no great effect of removing those extra DNA replication/repair genes.
#######
###Before moving on: Let's compare the bps-only mutation rates.
shapiro.test(log(MAs1$bpsub_per_nt));shapiro.test(log(MA3B$bpsub_per_nt))
ggdensity(log(MAs1$bpsub_per_nt));ggdensity(log(MA3B$bpsub_per_nt))
wilcox.test(x=log(MAs1$bpsub_per_nt),y=log(MA3B$bpsub_per_nt),mu=0,alternative = 'two.sided',paired=F)
#W=2409,p=0.957
var.test(x=log(MAs1$bpsub_per_nt),y=log(MA3B$bpsub_per_nt),ratio=1,alternative = 'two.sided')
#F=0.852, p-val = 0.500
bpsub_pernt_twostrains_log<-t.test(x=log(MAs1$bpsub_per_nt),y=log(MA3B$bpsub_per_nt),mu=0,alternative = 'two.sided',var.equal = T);bpsub_pernt_twostrains_log
#t=0.099, p-val = 0.921
###Conclude that there is no different in the bps rate
var.test(x=(MAs1$bpsub_per_nt),y=(MA3B$bpsub_per_nt),ratio=1,alternative = 'two.sided')
bpsub_pernt_twostrains<-t.test(x=(MAs1$bpsub_per_nt),y=(MA3B$bpsub_per_nt),mu=0,alternative = 'two.sided',var.equal = T);bpsub_pernt_twostrains
#t=0.051, p-val = 0.959. Same conclusion. No difference in the bps rate.
#What COULD have affecte the NSE, is that syn3B prolly had a lower per genome mutation rate---that's the actual input of mutations that could drive evolution.
#second, per total CDS. This is Mike Lynch's evolutionary question---a test of the DBH---and DBH is not testable here, because the minimal cell syn3B has not had any evolution.
#HOWEVER it is an interesting question to the extent that it would have altered the dynamics during the NSE!
#test for normality
shapiro.test(MAs1$per_CDS_per_gen);shapiro.test(MA3B$per_CDS_per_gen)
ggdensity(MAs1$per_CDS_per_gen);ggdensity(MA3B$per_CDS_per_gen)
wilcox.test(x=MAs1$per_CDS_per_gen,y=MA3B$per_CDS_per_gen,mu=0,alternative = 'two.sided',paired=F)
#W=6450, p-val = 6.484e-09
shapiro.test(log(MAs1$per_CDS_per_gen));shapiro.test(log(MA3B$per_CDS_per_gen))
ggdensity(log(MAs1$per_CDS_per_gen));ggdensity(log(MA3B$per_CDS_per_gen))
wilcox.test(x=log(MAs1$per_CDS_per_gen),y=log(MA3B$per_CDS_per_gen),mu=0,alternative = 'two.sided',paired=F)
#W=6450, p-val = 6.484e-09
#test for equal variances
var.test(x=MAs1$per_CDS_per_gen,y=MA3B$per_CDS_per_gen,ratio=1,alternative = 'two.sided')
#F=1.560, p-val = 0.0337
perCDS_twostrains<-t.test(x=MAs1$per_CDS_per_gen,y=MA3B$per_CDS_per_gen,mu=0,alternative = 'two.sided',var.equal = F);perCDS_twostrains
#p-val = 8.699e-09
var.test(x=log(MAs1$per_CDS_per_gen),y=log(MA3B$per_CDS_per_gen),ratio=1,alternative = 'two.sided')
#F=0.816, p-val = 0.334
perCDS_twostrains_log<-t.test(x=log(MAs1$per_CDS_per_gen),y=log(MA3B$per_CDS_per_gen),mu=0,alternative = 'two.sided',var.equal = T);perCDS_twostrains_log
#p-val < 0.05
#ok so part 2b is per GENOMEper gen. This is more impt than per CDS for the NSE I think (even tho per CDS is more important for Mike Lynch's comparative question!)
shapiro.test(MAs1$per_genome_per_gen);shapiro.test(MA3B$per_genome_per_gen)
ggdensity(MAs1$per_genome_per_gen);ggdensity(MA3B$per_genome_per_gen)
wilcox.test(x=MAs1$per_genome_per_gen,y=MA3B$per_genome_per_gen,mu=0,alternative = 'two.sided',paired=F)
#W=6450, p-val = 6.484e-09
shapiro.test(log(MAs1$per_genome_per_gen));shapiro.test(log(MA3B$per_genome_per_gen))
ggdensity(log(MAs1$per_genome_per_gen));ggdensity(log(MA3B$per_genome_per_gen))
wilcox.test(x=log(MAs1$per_genome_per_gen),y=log(MA3B$per_genome_per_gen),mu=0,alternative = 'two.sided',paired=F)
#W=6450, p-val = 6.484e-09
#test for equal variances
var.test(x=MAs1$per_genome_per_gen,y=MA3B$per_genome_per_gen,ratio=1,alternative = 'two.sided')
#F=1.649, p-val = 0.0170
pergenome_twostrains<-t.test(x=MAs1$per_genome_per_gen,y=MA3B$per_genome_per_gen,mu=0,alternative = 'two.sided',var.equal = F);pergenome_twostrains
#p-val = 4.924e-10
var.test(x=log(MAs1$per_genome_per_gen),y=log(MA3B$per_genome_per_gen),ratio=1,alternative = 'two.sided')
#F=0.816, p-val = 0.334
pergenome_twostrains_log<-t.test(x=log(MAs1$per_genome_per_gen),y=log(MA3B$per_genome_per_gen),mu=0,alternative = 'two.sided',var.equal = T);pergenome_twostrains_log
#p-val < 2.2e-16
#conclude that the minimal cell has a significantly lower per-genome-per-gen mutation rate. Is a difference of 0.0338 versus 0.0177 mutations per genome per generation biologically signif? In the context of the NSE, this would result in a difference of
0.033790614*2000*30000000
0.017655872*2000*30000000
#2.0e09 vs 1.1e09 mutations tested during the course of the evolution, assuming an avg cell dens of 1e07 cells/mL. So either way, a mutation at every position has been tested 2.0e09/1e06 = 2000 (wildtype) versus 1.1e09/5e05=2200 (minimal) times during the NSE.
############################################################
#Part 6: i) Test dN/dS ratio. ii) Compare proportion of called SNMs in CDS regions versus non-CDS regions to the theoretical null expectation.
#First look at dN/dS value for each line
shapiro.test(MAs1$dN_dS);shapiro.test(MA3B$dN_dS)
#non-normal distrns
wilcox.test(x=MAs1$dN_dS,y=NULL,mu=1,alternative="two.sided")
#P=1.703e-10---- dN/dS is significantly different (greater) than 1
wilcox.test(x=MA3B$dN_dS,y=NULL,mu=1,alternative="two.sided")
#P=0.02665----- dN/dS is significantly different (greater) than 1
t.test(x=MAs1$dN_dS,y=NULL,mu=1,alternative="two.sided")
t.test(x=MA3B$dN_dS,y=NULL,mu=1,alternative="two.sided")
#Same inference when using t-test
#Next, for each strain, look at the total number of CDS SNMs and non-CDS SNMs. Do they occur in proportions significantly different from the null expectation?
x6s1<-sum(MAs1$in_CDS)
n6s1<-sum(MAs1$in_CDS)+sum(MAs1$not_in_CDS)
CDSprops1 <- prop.test(x = x6s1, n = n6s1, p = (926310/1078809), alternative = 'two.sided');CDSprops1
#P = 0.876. There is not significant deviation from the proportion of mutations falling in CDS regions expected due to chance alone. 86% compared to expected 86%
x63B<-sum(MA3B$in_CDS)
n63B<-sum(MA3B$in_CDS)+sum(MA3B$not_in_CDS)
CDSprops1 <- prop.test(x = x63B, n = n63B, p = (479721/543379), alternative = 'two.sided');CDSprops1
#P 0.069. There is not significant deviation from the proportion of mutations falling in CDS regions expected due to chance alone. 86%, compared to expected 88%
###############################################################
#Part 7: Compare the overall spectra/distributions of mutation. Are the two spectra significantly different via chi-square contingency analysis?
alltype_table<-matrix(c(46,175,1810,20,63,521), nrow=2,ncol=3,byrow=T)
rownames(alltype_table)<- c("Wildtype", "Minimal")
colnames(alltype_table)<- c("In","Del","SNM")
alltype_table
XX_all <- chisq.test(alltype_table, simulate.p.value = F, B = 99999)
#XX_all <- chisq.test(alltype_table, simulate.p.value = T, B = 99999)
XX_all
XX_all$expected
#df=2, p=0.1248
SNM_table<-matrix(c(20,131,68,189,759,643,7,8,20,5,341,140), nrow=2,ncol=6,byrow=T)
rownames(SNM_table)<- c("Wildtype", "Minimal")
colnames(SNM_table)<- c("AT->CG","AT->GC","AT->TA","CG->GC","CG->TA","GC->TA")
SNM_table
XX_SNM <- chisq.test(SNM_table, simulate.p.value = F, B = 99999)
#XX_SNM <- chisq.test(SNM_table, simulate.p.value = T, B = 99999)
XX_SNM
XX_SNM$expected
######################
#Make some figures
mySNM<-read_csv("data\\MA\\MA_grouped_bar_SNM.csv")
mymutp<-read_csv("data\\MA\\MA_grouped_bar_mut.types.csv")
MASNM<-as_tibble(mySNM)
MAmutp<-as_tibble(mymutp)
NSESNM<-as_tibble(myNSE_SNM)
MASNM$strain <- as.factor(MASNM$strain)
MASNM$mut <- as.factor(MASNM$mut)
levels(MASNM$strain)[levels(MASNM$strain)=="s1"] <- "Wildtype"
levels(MASNM$strain)[levels(MASNM$strain)=="3B"] <- "Minimal"
MASNM$strain <- factor(MASNM$strain, levels=c("Wildtype","Minimal"))
MASNM$mut <- factor(MASNM$mut, levels = c("A:T to C:G","A:T to G:C","A:T to T:A","C:G to G:C", "C:G to T:A", "C:G to A:T"))
myNSE_SNM<-read_csv("data\\MA\\NSE_grouped_bar_SNM.csv")
NSESNM$strain <- as.factor(NSESNM$strain)
NSESNM$mut <- as.factor(NSESNM$mut)
levels(NSESNM$strain)[levels(NSESNM$strain)=="s1"] <- "Wildtype"
levels(NSESNM$strain)[levels(NSESNM$strain)=="3B"] <- "Minimal"
NSESNM$strain <- factor(NSESNM$strain, levels=c("Wildtype","Minimal"))
NSESNM$mut <- factor(NSESNM$mut, levels = c("A:T to C:G","A:T to G:C","A:T to T:A","C:G to G:C", "C:G to T:A", "C:G to A:T"))
MAmutp$strain <- as.factor(MAmutp$strain)
MAmutp$mut <- as.factor(MAmutp$mut)
levels(MAmutp$strain)[levels(MAmutp$strain)=="s1"] <- "Wildtype"
levels(MAmutp$strain)[levels(MAmutp$strain)=="3B"] <- "Minimal"
levels(MAmutp$mut)[levels(MAmutp$mut)=="SNM"] <- "Single-nucleotide"
MAmutp$strain <- factor(MAmutp$strain, levels=c("Wildtype","Minimal"))
MAmutp$mut <- factor(MAmutp$mut, levels = c("Insertion","Deletion","Over 100 bp","Single-nucleotide"))
MASNM<-MASNM %>% mutate(prop2 = sprintf("%0.2f",prop))
NSESNM<-NSESNM %>% mutate(prop2 = sprintf("%0.2f",prop))
MAmutp<-MAmutp %>% mutate(prop2 = sprintf("%0.2f",prop))
#theme_set(theme_pubclean())
ggplot(MASNM, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_stack()
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red"))
# Use position = position_dodge()
# This figure shows the proportion of SNM types during the MA
SNMp <- ggplot(MASNM, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_dodge(width=0.75),
width = 0.2
) +
#ylim(0, 1) +
#xlim(0.9,1.5) +
#coord_fixed(ratio=5,clip="off")+
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = prop2, group = strain), position = position_dodge(0.85), vjust = -0.3, size = 5.5)+
labs(x="\nMutation type",y="Proportion\n") +
theme(axis.text.x = element_text(angle=-45, vjust=0,hjust=0.2, size =26))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
SNMp
# This figure shows the proportion of SNM types DURING THE NSE--- this is for comparison purposes only, it is NOT MA data!!!
ggplot(NSESNM, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_stack()
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red"))
# Use position = position_dodge()
NSEp <- ggplot(NSESNM, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_dodge(0.5),
width = 0.3
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = prop2, group = strain), position = position_dodge(0.5), vjust = -0.3, size = 5.5)+
labs(x="\nMutation type",y="Proportion\n") +
theme(axis.text.x = element_text(angle=-45, vjust=0,hjust=0.2, size =26))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
NSEp
ggplot(MAmutp, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_stack()
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red"))
# Proportions of different mutation types from MA. We will probably remove the "Over 100 bp" category (from the data file); just havent gotten to it yet
muttypep <- ggplot(MAmutp, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_dodge(0.5),
width = 0.35
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = prop2, group = strain), position = position_dodge(0.5), vjust = -0.3, size = 5.5)+
labs(x="\nMutation type",y="Proportion\n") +
theme(axis.text.x = element_text(angle=-45, vjust=0,hjust=0.2, size =26))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
muttypep
#Now do two strip charts, comparing the mutation rate, view thru the per nt lens
mycols<-c('blue','red')
pernt <- ggplot(MAALL, aes(x=strain, y=per_nt_per_gen)) +
geom_jitter(
aes(shape = strain, color = strain), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = .9, dodge.width = .2),
size = 1, stroke = 2.3) +
scale_shape_manual(values = c(15,15)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = strain),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2),
show.legend = FALSE
) +
scale_color_manual(values = mycols) +
labs(x="\nStrain",y="muts/nt/gen\n") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.position = "none",legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line = element_line(colour = "black"), axis.line.x = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit (.3, "cm"), axis.ticks.x = element_blank())
pernt
#Now do two strip charts, comparing the mutation rate, view thru the per CDS lens
mycols<-c('blue','red')
perCDS <- ggplot(MAALL, aes(x=strain, y=per_CDS_per_gen)) +
geom_jitter(
aes(shape = strain, color = strain), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = .9, dodge.width = .2),
size = 1, stroke = 2.3) +
scale_shape_manual(values = c(15,15)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = strain),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2),
show.legend = FALSE
) +
scale_color_manual(values = mycols) +
labs(x="\nStrain",y="muts/CDS/gen\n") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.position = "none",legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line = element_line(colour = "black"), axis.line.x = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit (.3, "cm"), axis.ticks.x = element_blank())
perCDS
#Strip chart, mutation rate per genome
mycols<-c('blue','red')
pergenome <- ggplot(MAALL, aes(x=strain, y=per_genome_per_gen)) +
geom_jitter(
aes(shape = strain, color = strain), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = .9, dodge.width = .2),
size = 1, stroke = 2.3) +
scale_shape_manual(values = c(15,15)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = strain),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2),
show.legend = FALSE
) +
scale_color_manual(values = mycols) +
labs(x="\nStrain",y="muts/genome/gen\n") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.position = "none",legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line = element_line(colour = "black"), axis.line.x = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit (.3, "cm"), axis.ticks.x = element_blank())
pergenome
myfigure<- ggarrange(pernt, muttypep, SNMp, labels = c("A","B","C"), heights = c(1,1,1), ncol = 1, nrow=3, align = "h")
myfigure
myspectrum<-ggarrange(muttypep, SNMp, labels = c("A","B"), ncol = 2, nrow=1)
myspectrum
# Use position = position_dodge()
NSEp <- ggplot(NSESNM, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_dodge(0.5),
width = 0.3
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = prop2, group = strain), position = position_dodge(0.5), vjust = -0.3, size = 5.5)+
labs(x="\nMutation type",y="Proportion\n") +
theme(axis.text.x = element_text(angle=-45, vjust=0,hjust=0.2, size =26))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
NSEp
# Use position = position_dodge()
NSEp <- ggplot(NSESNM, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_dodge(0.5),
width = 0.3
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = prop2, group = strain), position = position_dodge(0.5), vjust = -0.3, size = 5.5)+
labs(x="\nMutation type",y="Proportion\n") +
theme(axis.text.x = element_text(angle=-45, vjust=0,hjust=0.2, size =26))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
setwd("~\\..\\GitHub\\MinimalCell")
myALL<-read_csv("data\\MA\\MA_summary_for_R.csv")
my3B<-read_csv("data\\MA\\MA_3B_summary_for_R.csv")
mys1<-read_csv("data\\MA\\MA_s1_summary_for_R.csv")
MAALL<-as_tibble(myALL)
MA3B<-as_tibble(my3B)
MAs1<-as_tibble(mys1)
MAALL$strain <- as.factor(MAALL$strain)
levels(MAALL$strain)[levels(MAALL$strain)=="MA_s1"] <- "Wildtype"
levels(MAALL$strain)[levels(MAALL$strain)=="MA_3B"] <- "Minimal"
MAALL$strain <- factor(MAALL$strain, levels=c("Wildtype","Minimal"))
XX_all <- chisq.test(alltype_table, simulate.p.value = T, B = 99999)
#XX_all <- chisq.test(alltype_table, simulate.p.value = T, B = 99999)
XX_all
XX_all$expected
SNM_table<-matrix(c(20,131,68,189,759,643,7,8,20,5,341,140), nrow=2,ncol=6,byrow=T)
rownames(SNM_table)<- c("Wildtype", "Minimal")
colnames(SNM_table)<- c("AT->CG","AT->GC","AT->TA","CG->GC","CG->TA","GC->TA")
SNM_table
XX_SNM <- chisq.test(SNM_table, simulate.p.value = F, B = 99999)
#XX_SNM <- chisq.test(SNM_table, simulate.p.value = T, B = 99999)
XX_SNM
XX_SNM$expected
mySNM<-read_csv("data\\MA\\MA_grouped_bar_SNM.csv")
mymutp<-read_csv("data\\MA\\MA_grouped_bar_mut.types.csv")
MASNM<-as_tibble(mySNM)
MAmutp<-as_tibble(mymutp)
NSESNM<-as_tibble(myNSE_SNM)
MASNM$strain <- as.factor(MASNM$strain)
MASNM$mut <- as.factor(MASNM$mut)
levels(MASNM$strain)[levels(MASNM$strain)=="s1"] <- "Wildtype"
levels(MASNM$strain)[levels(MASNM$strain)=="3B"] <- "Minimal"
MASNM$strain <- factor(MASNM$strain, levels=c("Wildtype","Minimal"))
MASNM$mut <- factor(MASNM$mut, levels = c("A:T to C:G","A:T to G:C","A:T to T:A","C:G to G:C", "C:G to T:A", "C:G to A:T"))
myNSE_SNM<-read_csv("data\\MA\\NSE_grouped_bar_SNM.csv")
NSESNM$strain <- as.factor(NSESNM$strain)
NSESNM$mut <- as.factor(NSESNM$mut)
levels(NSESNM$strain)[levels(NSESNM$strain)=="s1"] <- "Wildtype"
levels(NSESNM$strain)[levels(NSESNM$strain)=="3B"] <- "Minimal"
NSESNM$strain <- factor(NSESNM$strain, levels=c("Wildtype","Minimal"))
NSESNM$mut <- factor(NSESNM$mut, levels = c("A:T to C:G","A:T to G:C","A:T to T:A","C:G to G:C", "C:G to T:A", "C:G to A:T"))
MAmutp$strain <- as.factor(MAmutp$strain)
MAmutp$mut <- as.factor(MAmutp$mut)
levels(MAmutp$strain)[levels(MAmutp$strain)=="s1"] <- "Wildtype"
levels(MAmutp$strain)[levels(MAmutp$strain)=="3B"] <- "Minimal"
levels(MAmutp$mut)[levels(MAmutp$mut)=="SNM"] <- "Single-nucleotide"
MAmutp$strain <- factor(MAmutp$strain, levels=c("Wildtype","Minimal"))
MAmutp$mut <- factor(MAmutp$mut, levels = c("Insertion","Deletion","Over 100 bp","Single-nucleotide"))
MASNM<-MASNM %>% mutate(prop2 = sprintf("%0.2f",prop))
NSESNM<-NSESNM %>% mutate(prop2 = sprintf("%0.2f",prop))
MAmutp<-MAmutp %>% mutate(prop2 = sprintf("%0.2f",prop))
ggplot(MASNM, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_stack()
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red"))
SNMp <- ggplot(MASNM, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_dodge(width=0.75),
width = 0.2
) +
#ylim(0, 1) +
#xlim(0.9,1.5) +
#coord_fixed(ratio=5,clip="off")+
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = prop2, group = strain), position = position_dodge(0.85), vjust = -0.3, size = 5.5)+
labs(x="\nMutation type",y="Proportion\n") +
theme(axis.text.x = element_text(angle=-45, vjust=0,hjust=0.2, size =26))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
SNMp
# This figure shows the proportion of SNM types DURING THE NSE--- this is for comparison purposes only, it is NOT MA data!!!
ggplot(NSESNM, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_stack()
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red"))
# Use position = position_dodge()
NSEp <- ggplot(NSESNM, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_dodge(0.5),
width = 0.3
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = prop2, group = strain), position = position_dodge(0.5), vjust = -0.3, size = 5.5)+
labs(x="\nMutation type",y="Proportion\n") +
theme(axis.text.x = element_text(angle=-45, vjust=0,hjust=0.2, size =26))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
NSEp
ggplot(MAmutp, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_stack()
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red"))
# Proportions of different mutation types from MA. We will probably remove the "Over 100 bp" category (from the data file); just havent gotten to it yet
muttypep <- ggplot(MAmutp, aes(x = mut, y = prop)) +
geom_bar(
aes(color = strain, fill = strain),
stat = "identity", position = position_dodge(0.5),
width = 0.35
) +
scale_color_manual(values = c("blue", "red"))+
scale_fill_manual(values = c("blue", "red")) +
geom_text(aes(label = prop2, group = strain), position = position_dodge(0.5), vjust = -0.3, size = 5.5)+
labs(x="\nMutation type",y="Proportion\n") +
theme(axis.text.x = element_text(angle=-45, vjust=0,hjust=0.2, size =26))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
muttypep
#Now do two strip charts, comparing the mutation rate, view thru the per nt lens
mycols<-c('blue','red')
pernt <- ggplot(MAALL, aes(x=strain, y=per_nt_per_gen)) +
geom_jitter(
aes(shape = strain, color = strain), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = .9, dodge.width = .2),
size = 1, stroke = 2.3) +
scale_shape_manual(values = c(15,15)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = strain),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2),
show.legend = FALSE
) +
scale_color_manual(values = mycols) +
labs(x="\nStrain",y="muts/nt/gen\n") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.position = "none",legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line = element_line(colour = "black"), axis.line.x = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit (.3, "cm"), axis.ticks.x = element_blank())
pernt
#Now do two strip charts, comparing the mutation rate, view thru the per CDS lens
mycols<-c('blue','red')
perCDS <- ggplot(MAALL, aes(x=strain, y=per_CDS_per_gen)) +
geom_jitter(
aes(shape = strain, color = strain), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = .9, dodge.width = .2),
size = 1, stroke = 2.3) +
scale_shape_manual(values = c(15,15)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = strain),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2),
show.legend = FALSE
) +
scale_color_manual(values = mycols) +
labs(x="\nStrain",y="muts/CDS/gen\n") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.position = "none",legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line = element_line(colour = "black"), axis.line.x = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit (.3, "cm"), axis.ticks.x = element_blank())
perCDS
#Strip chart, mutation rate per genome
mycols<-c('blue','red')
pergenome <- ggplot(MAALL, aes(x=strain, y=per_genome_per_gen)) +
geom_jitter(
aes(shape = strain, color = strain), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = .9, dodge.width = .2),
size = 1, stroke = 2.3) +
scale_shape_manual(values = c(15,15)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = strain),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2),
show.legend = FALSE
) +
scale_color_manual(values = mycols) +
labs(x="\nStrain",y="muts/genome/gen\n") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.position = "none",legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line = element_line(colour = "black"), axis.line.x = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit (.3, "cm"), axis.ticks.x = element_blank())
pergenome
myfigure<- ggarrange(pernt, muttypep, SNMp, labels = c("A","B","C"), heights = c(1,1,1), ncol = 1, nrow=3, align = "h")
myfigure
myspectrum<-ggarrange(muttypep, SNMp, labels = c("A","B"), ncol = 2, nrow=1)
myspectrum
